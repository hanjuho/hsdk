//-----------------------------------------------------------------------------------------
// Compute Circle Alpha
//-----------------------------------------------------------------------------------------
bool computeCircleAlpha(float2 uv, float time)
{
	// 시계방향으로 한 바퀴를 1초로 0 <= g_fTime <= 1 일 때,
	// uv는 시계바늘이 되어 g_fTime 보다 작다면 true를 반환
	float a = (atan2(0.5f + uv.x, uv.y - 0.5f) * 0.159154f) + 0.5f;
	if (a < time)
	{
		return false;
	}
	else
	{
		return true;
	}
}
//-----------------------------------------------------------------------------------------
// Compute Circle Alpha
//-----------------------------------------------------------------------------------------
float3 computeDestroy(float3 pos, float3 nor, float time)
{
	// 시간에 따라 버텍스 간의 간격이 벌어지면서 깨짐
	return pos + nor * time;
}